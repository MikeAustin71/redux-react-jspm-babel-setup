{"version":3,"sources":["../src/main.jsx"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*\r\nTaken from The source code for this demo was taken from the\r\nfree EggheadIO tutorial Redux: The Single Immutable Tree by\r\nDan Abramov.\r\n\r\nhttps://egghead.io/lessons/javascript-redux-the-single-immutable-state-tree?series=getting-started-with-redux\r\n\r\nThis project setup has been modified to incorporate jspm and babel-6.\r\n\r\n*/\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as Redux from \"redux\";\r\n\r\n/*\r\n * We (EggheadIO) will be explaining the code below\r\n * in the following lessons. For now,\r\n * feel free to click around and notice\r\n * how the current state tree is logged\r\n * to the console on every change.\r\n */\r\n\r\nconst ADD_TODO = 'ADD_TODO';\r\nconst TOGGLE_TODO = 'TOGGLE_TODO';\r\nconst SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\n\r\nconst Filters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n};\r\n\r\n/*\r\n * Components\r\n */\r\n\r\nclass AddTodo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type='text' ref='input' />\r\n                <button onClick={(e) => this.handleClick(e)}>\r\n                    Add\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleClick(e) {\r\n        const node = this.refs.input;\r\n        const text = node.value.trim();\r\n        this.props.onAddClick(text);\r\n        node.value = '';\r\n    }\r\n}\r\n\r\nconst FilterLink = ({ isActive, name, onClick }) => {\r\n    if (isActive) {\r\n        return <span>{name}</span>;\r\n    }\r\n\r\n    return (\r\n        <a href='#' onClick={e => { e.preventDefault(); onClick(); }}>\r\n            {name}\r\n        </a>\r\n    );\r\n};\r\n\r\nconst Footer = ({ filter, onFilterChange }) => (\r\n    <p>\r\n        Show:\r\n        {' '}\r\n        <FilterLink\r\n            name='All'\r\n            isActive={filter === Filters.SHOW_ALL}\r\n            onClick={() => onFilterChange(Filters.SHOW_ALL)} />\r\n        {', '}\r\n        <FilterLink\r\n            name='Completed'\r\n            isActive={filter === Filters.SHOW_COMPLETED}\r\n            onClick={() => onFilterChange(Filters.SHOW_COMPLETED)} />\r\n        {', '}\r\n        <FilterLink\r\n            name='Active'\r\n            isActive={filter === Filters.SHOW_ACTIVE}\r\n            onClick={() => onFilterChange(Filters.SHOW_ACTIVE)} />\r\n    </p>\r\n);\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n    <li\r\n        onClick={onClick}\r\n        style={{\r\n    textDecoration: completed ? 'line-through' : 'none',\r\n        cursor: 'pointer'\r\n}}>\r\n        {text}\r\n    </li>\r\n);\r\n\r\n\r\nconst TodoList = ({ todos, onTodoClick }) => (\r\n    <ul>\r\n        {todos.map(todo =>\r\n        <Todo {...todo}\r\n            key={todo.id}\r\n            onClick={() => onTodoClick(todo.id)} />\r\n            )}\r\n    </ul>\r\n);\r\n\r\nlet nextTodoId = 0;\r\nconst TodoApp = ({ dispatch, todos, visibilityFilter }) => {\r\n    let visibleTodos = todos;\r\n\r\n    switch (visibilityFilter) {\r\n        case Filters.SHOW_COMPLETED:\r\n            visibleTodos = todos.filter(todo => todo.completed);\r\n            break;\r\n        case Filters.SHOW_ACTIVE:\r\n            visibleTodos = todos.filter(todo => !todo.completed);\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AddTodo\r\n                onAddClick={text =>\r\n    dispatch({ type: ADD_TODO, text, id: nextTodoId++ })\r\n} />\r\n            <TodoList\r\n                todos={visibleTodos}\r\n                onTodoClick={id =>\r\n    dispatch({ type: TOGGLE_TODO, id })\r\n} />\r\n            <Footer\r\n                filter={visibilityFilter}\r\n                onFilterChange={filter =>\r\n    dispatch({ type: SET_VISIBILITY_FILTER, filter })\r\n} />\r\n        </div>\r\n    );\r\n};\r\n\r\n/*\r\n * Reducers\r\n */\r\n\r\nconst visibilityFilter = (state = Filters.SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n        case SET_VISIBILITY_FILTER:\r\n            return action.filter;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [...state, {\r\n                text: action.text,\r\n                id: action.id,\r\n                completed: false\r\n            }];\r\n        case TOGGLE_TODO:\r\n            return state.map(todo =>\r\n                todo.id === action.id ?\r\n                    Object.assign({}, todo, { completed: !todo.completed }) :\r\n                    todo\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// const todoApp = combineReducers\r\nconst todoApp = Redux.combineReducers({\r\n    visibilityFilter,\r\n    todos\r\n});\r\n\r\n/*\r\n * Go!\r\n */\r\n\r\n// const store = createStore(todoApp);\r\nconst store = Redux.createStore(todoApp);\r\n\r\nconst dispatch = (action) => {\r\n    store.dispatch(action);\r\n    console.log('----------------');\r\n    console.log('current state:');\r\n    console.log(store.getState());\r\n};\r\nconst render = () => {\r\n    ReactDOM.render(\r\n        <TodoApp\r\n            {...store.getState()}\r\n            dispatch={dispatch}\r\n        />,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrender();\r\nstore.subscribe(render);\r\nconsole.log('current state:');\r\nconsole.log(store.getState());\r\n\r\n// noprotect"]}